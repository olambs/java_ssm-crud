<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- 包扫描，去除controller -->
	<context:component-scan base-package="com.wood">
		<context:exclude-filter
			type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!--Spring 配置文件，这里主要配置和业务逻辑有关的。 -->
	<!--数据源 -->
	<context:property-placeholder
		location="classpath:dbconfig.properties" />
	<bean
		id="pooledDataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property
			name="jdbcUrl"
			value="${jdbc.jdbcUrl}"></property>
		<property
			name="driverClass"
			value="${jdbc.driverClass}"></property>
		<property
			name="user"
			value="${jdbc.user}"></property>
		<property
			name="password"
			value="${jdbc.password}"></property>
			<property
			name="maxPoolSize"
			value="${jdbc.maxPoolSize}"></property>
			<property
			name="minPoolSize"
			value="${jdbc.minPoolSize}"></property>

	</bean>


	<!-- 配置和mybatis的整合 -->
	<bean
		id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--指定mybatis全局配置文件的位置 -->
		<property
			name="configLocation"
			value="classpath:mybatis-config.xml"></property>
			
		<property
			name="dataSource"
			ref="pooledDataSource"></property>

	
		<!-- 指定mybatis，mapper的位置 -->
		<property
			name="mapperLocations"
			value="classpath:mapper/*.xml"></property>
	</bean>

	<!-- 配置扫描器，将mybatis接口的实现加入到ioc容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--扫描 所有的dao接口的实现，加入到ioc容器中 -->
		<property
			name="basePackage"
			value="com.wood.crud.dao"></property>
	</bean>
	<!-- 配置一个可以执行批量的sqlsession -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
	<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	<constructor-arg name="executorType" value="BATCH" ></constructor-arg>
	</bean>
	<!-- 配置和mybatis的整合结束 -->
	
	

	<!-- 事务控制的配置 -->
	<bean
		id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 控制数据源 -->
		<property
			name="dataSource"
			ref="pooledDataSource"></property>
		</bean>
		<!-- 事务控制的配置end -->

		<!-- 开启 基于注解的事物，使用xml配置形式的事物（必要主要的都是使用xml配置） -->
		<aop:config>
			<!--切入点表达式 -->
			<aop:pointcut
				expression="execution(* com.wood.crud.service..*(..))"
				id="txPoint" />
			<!--配置事物增强 -->
			<aop:advisor
				advice-ref="txAdvice"
				pointcut-ref="txPoint" />
		</aop:config>
		<!-- 配置事务增强 ,事务如何切入 -->
		<tx:advice id="txAdvice" transaction-manager="transactionManager">
			<tx:attributes>
				<!--所有方法都是事务方法 -->
				<tx:method name="*" />
				<!--以get的所有方法都是事务方法 -->
				<tx:method name="get*" read-only="true" />
			</tx:attributes>
		</tx:advice>

<!-- 事务控制的配置end -->
<!--Spring配置文件的核心点  1数据源2.mybatis整合3.事务配置    -->



</beans>
